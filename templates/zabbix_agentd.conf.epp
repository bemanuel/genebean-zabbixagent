################################################################
################################################################
#
#        This file is managed by Puppet
#
################################################################
################################################################

# This is a config file for the Zabbix agent daemon  <%= $kernel %>
# To get more information about Zabbix, visit http://www.zabbix.com

############ GENERAL PARAMETERS #################

<% if $kernel != 'windows' { -%>
### Option: PidFile
#	Name of PID file.
#
# Mandatory: no
# Default:
# PidFile=/tmp/zabbix_agentd.pid
  <%- if $zabbixagent::pid_file { -%>
PidFile=<%= $zabbixagent::pid_file %>
  <% } -%>
<% } -%>

<% if $zabbixagent::version != '2.4' { -%>
### Option: LogType
# Specifies where log messages are written to:
<% if $kernel == 'windows' { -%>
# system  - Windows event log
<% } else { -%>
# system  - syslog
<% } -%>
# file    - file specified with LogFile parameter
# console - standard output
#
# Mandatory: no
# Default:
# LogType=file
<% if $zabbixagent::log_type { -%>
LogType=<%= $zabbixagent::log_type %>
<% } -%>
<% } -%>

### Option: LogFile
#	Name of log file.
<% if $kernel == 'windows' { -%>
#	If not set, Windows Event Log is used.
<% } else { -%>
#	If not set, syslog is used.
<% } -%>
#
# Mandatory: no
# Default:
# LogFile=
<% if $zabbixagent::log_file { -%>
LogFile=<%= $zabbixagent::log_file %>
<% } -%>

### Option: LogFileSize
#	Maximum size of log file in MB.
#	0 - disable automatic log rotation.
#
# Mandatory: no
# Range: 0-1024
# Default:
# LogFileSize=1
<% if $zabbixagent::log_file_size { -%>
LogFileSize=<%= $zabbixagent::log_file_size %>
<% } -%>

### Option: DebugLevel
#	Specifies debug level
#	0 - basic information about starting and stopping of Zabbix processes
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
#
# Mandatory: no
# Range: 0-4
# Default:
# DebugLevel=3
<% if $zabbixagent::debug_level { -%>
DebugLevel=<%= $zabbixagent::debug_level %>
<% } -%>

### Option: SourceIP
#	Source IP address for outgoing connections.
#
# Mandatory: no
# Default:
# SourceIP=
<% if $zabbixagent::source_ip { -%>
SourceIP=<%= $zabbixagent::source_ip %>
<% } -%>

### Option: EnableRemoteCommands
#	Whether remote commands from Zabbix server are allowed.
#	0 - not allowed
#	1 - allowed
#
# Mandatory: no
# Default:
# EnableRemoteCommands=0
<% if $zabbixagent::enable_remote_commands { -%>
EnableRemoteCommands=<%= $zabbixagent::enable_remote_commands %>
<% } -%>

### Option: LogRemoteCommands
#	Enable logging of executed shell commands as warnings.
#	0 - disabled
#	1 - enabled
#
# Mandatory: no
# Default:
# LogRemoteCommands=0
<% if $zabbixagent::log_remote_commands { -%>
LogRemoteCommands=<%= $zabbixagent::log_remote_commands %>
<% } -%>

##### Passive checks related

### Option: Server
#	List of comma delimited IP addresses (or hostnames) of Zabbix servers.
#	Incoming connections will be accepted only from the hosts listed here.
#	If IPv6 support is enabled then '127.0.0.1', '::127.0.0.1', '::ffff:127.0.0.1' are treated equally.
#
# Mandatory: no
# Default:
# Server=
<% if $zabbixagent::server =~ String { -%>
Server=<%= $zabbixagent::server %>
<% } elsif $zabbixagent::server =~ Array { -%>
Server=<%= $zabbixagent::server.join(',') %>
<% } -%>

### Option: ListenPort
#	Agent will listen on this port for connections from the server.
#
# Mandatory: no
# Range: 1024-32767
# Default:
# ListenPort=10050
<% if $zabbixagent::listen_port { -%>
ListenPort=<%= $zabbixagent::listen_port %>
<% } -%>

### Option: ListenIP
#	List of comma delimited IP addresses that the agent should listen on.
#	First IP address is sent to Zabbix server if connecting to it to retrieve list of active checks.
#
# Mandatory: no
# Default:
# ListenIP=0.0.0.0
<% if $zabbixagent::listen_ip { -%>
ListenIP=<%= $zabbixagent::listen_ip %>
<% } -%>

### Option: StartAgents
#	Number of pre-forked instances of zabbix_agentd that process passive checks.
#	If set to 0, disables passive checks and the agent will not listen on any TCP port.
#
# Mandatory: no
# Range: 0-100
# Default:
# StartAgents=3
<% if $zabbixagent::start_agents { -%>
StartAgents=<%= $zabbixagent::start_agents %>
<% } -%>

##### Active checks related

### Option: ServerActive
#	List of comma delimited IP:port (or hostname:port) pairs of Zabbix servers for active checks.
#	If port is not specified, default port is used.
#	IPv6 addresses must be enclosed in square brackets if port for that host is specified.
#	If port is not specified, square brackets for IPv6 addresses are optional.
#	If this parameter is not specified, active checks are disabled.
#	Example: ServerActive=127.0.0.1:20051,zabbix.domain,[::1]:30051,::1,[12fc::1]
#
# Mandatory: no
# Default:
# ServerActive=
<% if $zabbixagent::server_active =~ String { -%>
ServerActive=<%= $zabbixagent::server_active %>
<% } elsif $zabbixagent::server_active =~ Array { -%>
ServerActive=<%= $zabbixagent::server_active.join(',') %>
<% } -%>

### Option: Hostname
#	Unique, case sensitive hostname.
#	Required for active checks and must match hostname as configured on the server.
#	Value is acquired from HostnameItem if undefined.
#
# Mandatory: no
# Default:
# Hostname=
<% if $zabbixagent::hostname { -%>
Hostname=<%= $zabbixagent::hostname.downcase %>
<% } -%>

### Option: HostnameItem
#	Item used for generating Hostname if it is undefined. Ignored if Hostname is defined.
#	Does not support UserParameters or aliases.
#
# Mandatory: no
# Default:
# HostnameItem=system.hostname
<% if $zabbixagent::hostname_item { -%>
HostnameItem=<%= $zabbixagent::hostname_item %>
<% } -%>

### Option: HostMetadata
#	Optional parameter that defines host metadata.
#	Host metadata is used at host auto-registration process.
#	An agent will issue an error and not start if the value is over limit of 255 characters.
#	If not defined, value will be acquired from HostMetadataItem.
#
# Mandatory: no
# Range: 0-255 characters
# Default:
# HostMetadata=
<% if $zabbixagent::host_metadata { -%>
HostMetadata=<%= $zabbixagent::host_metadata %>
<% } -%>

### Option: HostMetadataItem
#	Optional parameter that defines an item used for getting host metadata.
#	Host metadata is used at host auto-registration process.
#	During an auto-registration request an agent will log a warning message if
#	the value returned by specified item is over limit of 255 characters.
#	This option is only used when HostMetadata is not defined.
#
# Mandatory: no
# Default:
# HostMetadataItem=
<% if $zabbixagent::host_metadata_item { -%>
HostMetadataItem=<%= $zabbixagent::host_metadata_item %>
<% } -%>

### Option: RefreshActiveChecks
#	How often list of active checks is refreshed, in seconds.
#
# Mandatory: no
# Range: 60-3600
# Default:
# RefreshActiveChecks=120
<% if $zabbixagent::refresh_active_checks { -%>
RefreshActiveChecks=<%= $zabbixagent::refresh_active_checks %>
<% } -%>

### Option: BufferSend
#	Do not keep data longer than N seconds in buffer.
#
# Mandatory: no
# Range: 1-3600
# Default:
# BufferSend=5
<% if $zabbixagent::buffer_send { -%>
BufferSend=<%= $zabbixagent::buffer_send %>
<% } -%>

### Option: BufferSize
#	Maximum number of values in a memory buffer. The agent will send
#	all collected data to Zabbix Server or Proxy if the buffer is full.
#
# Mandatory: no
# Range: 2-65535
# Default:
# BufferSize=100
<% if $zabbixagent::buffer_size { -%>
BufferSize=<%= $zabbixagent::buffer_size %>
<% } -%>

### Option: MaxLinesPerSecond
#	Maximum number of new lines the agent will send per second to Zabbix Server
<% if $kernel == 'windows' { -%>
#	or Proxy processing 'log', 'logrt' and 'eventlog' active checks.
#	The provided value will be overridden by the parameter 'maxlines',
#	provided in 'log', 'logrt' or 'eventlog' item keys.
<% } else { -%>
#	or Proxy processing 'log' and 'logrt' active checks.
#	The provided value will be overridden by the parameter 'maxlines',
#	provided in 'log' or 'logrt' item keys.
<% } -%>
#
# Mandatory: no
# Range: 1-1000
# Default:
# MaxLinesPerSecond=100
<% if $zabbixagent::max_lines_per_second { -%>
MaxLinesPerSecond=<%= $zabbixagent::max_lines_per_second %>
<% } -%>

############ ADVANCED PARAMETERS #################

### Option: Alias
#	Sets an alias for an item key. It can be used to substitute long and complex item key with a smaller and simpler one.
#	Multiple Alias parameters may be present. Multiple parameters with the same Alias key are not allowed.
#	Different Alias keys may reference the same item key.
<% if $kernel == 'windows' { -%>
#	For example, to retrieve paging file usage in percents from the server:
#	Alias=pg_usage:perf_counter[\Paging File(_Total)\% Usage]
#	Now shorthand key pg_usage may be used to retrieve data.
#	Aliases can be used in HostMetadataItem but not in HostnameItem or PerfCounter parameters.
<% } else { -%>
#	For example, to retrieve the ID of user 'zabbix':
#	Alias=zabbix.userid:vfs.file.regexp[/etc/passwd,^zabbix:.:([0-9]+),,,,\1]
#	Now shorthand key zabbix.userid may be used to retrieve data.
#	Aliases can be used in HostMetadataItem but not in HostnameItem parameters.
<% } -%>
#
# Mandatory: no
# Range:
# Default:
<% if $zabbixagent::item_alias { -%>
<% $zabbixagent::item_alias.each |$a| { -%>
Alias=<%= $a %>
<% } -%>
<% } -%>

### Option: Timeout
#	Spend no more than Timeout seconds on processing
#
# Mandatory: no
# Range: 1-30
# Default:
# Timeout=3
<% if $zabbixagent::timeout { -%>
Timeout=<%= $zabbixagent::timeout %>
<% } -%>

<% if $kernel == 'windows' { -%>
### Option: PerfCounter
#	Syntax: <parameter_name>,"<perf_counter_path>",<period>
#	Defines new parameter <parameter_name> which is an average value for system performance counter <perf_counter_path> for the specified time period <period> (in seconds).
#	For example, if you wish to receive average number of processor interrupts per second for last minute, you can define new parameter "interrupts" as following:
#	PerfCounter = interrupts,"\Processor(0)\Interrupts/sec",60
#	Please note double quotes around performance counter path.
#	Samples for calculating average value will be taken every second.
#	You may run "typeperf -qx" to get list of all performance counters available in Windows.
#
# Mandatory: no
# Range:
# Default:
<% if $zabbixagent::perf_counter { -%>
<% $zabbixagent::perf_counter.each |$pc| { -%>
PerfCounter=<%= $pc %>
<% } -%>
<% } -%>
<% } else { -%>
### Option: AllowRoot
#	Allow the agent to run as 'root'. If disabled and the agent is started by 'root', the agent
#	will try to switch to the user specified by the User configuration option instead.
#	Has no effect if started under a regular user.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Default:
# AllowRoot=0
  <%- if $zabbixagent::allow_root { -%>
AllowRoot=<%= $zabbixagent::allow_root %>
  <% } -%>

### Option: User
#	Drop privileges to a specific, existing user on the system.
#	Only has effect if run as 'root' and AllowRoot is disabled.
#
# Mandatory: no
# Default:
# User=zabbix
  <%- if $zabbixagent::user { -%>
User=<%= $zabbixagent::user %>
  <% } -%>
<% } -%>

### Option: Include
<% if $kernel == 'windows' { -%>
#	You may include individual files in the configuration file.
<% } else { -%>
#	You may include individual files or all files in a directory in the configuration file.
#	Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
<% } -%>
#
# Mandatory: no
# Default:
# Include=
<% if $zabbixagent::include_files { -%>
<% $zabbixagent::include_files.each |$i| { -%>
Include=<%= $i %>
<% } -%>
<% } -%>

<% if $kernel == 'windows' { -%>
# Include=c:\zabbix\zabbix_agentd.userparams.conf
# Include=c:/zabbix/zabbix_agentd.userparams.conf
<% } else { -%>
# Include=/usr/local/etc/zabbix_agentd.userparams.conf
# Include=/usr/local/etc/zabbix_agentd.conf.d/
# Include=/usr/local/etc/zabbix_agentd.conf.d/*.conf
<% } -%>

####### USER-DEFINED MONITORED PARAMETERS #######

### Option: UnsafeUserParameters
#	Allow all characters to be passed in arguments to user-defined parameters.
#	The following characters are not allowed:
#	\ ' ” ` * ? [ ] { } ~ $ ! & ; ( ) < > | # @
#	Additionally, newline characters are not allowed.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Range: 0-1
# Default:
# UnsafeUserParameters=0
<% if $zabbixagent::unsafe_user_parameters { -%>
UnsafeUserParameters=<%= $zabbixagent::unsafe_user_parameters %>
<% } -%>

### Option: UserParameter
#	User-defined parameter to monitor. There can be several user-defined parameters.
#	Format: UserParameter=<key>,<shell command>
<% if $kernel != 'windows' { -%>
#	See 'zabbix_agentd' directory for examples.
<% } -%>
#
# Mandatory: no
# Default:
# UserParameter=
<% if $zabbixagent::user_parameter { -%>
<% $zabbixagent::user_parameter.each |$up| { -%>
UserParameter=<%= $up %>
<% } -%>
<% } -%>

<% if $kernel != 'windows' { -%>
####### LOADABLE MODULES #######

### Option: LoadModulePath
#	Full path to location of agent modules.
#	Default depends on compilation options.
#
# Mandatory: no
# Default:
# LoadModulePath=${libdir}/modules
  <%- if $zabbixagent::load_module_path { -%>
LoadModulePath=<%= $zabbixagent::load_module_path %>
  <% } -%>

### Option: LoadModule
#	Module to load at agent startup. Modules are used to extend functionality of the agent.
#	Format: LoadModule=<module.so>
#	The modules must be located in directory specified by LoadModulePath.
#	It is allowed to include multiple LoadModule parameters.
#
# Mandatory: no
# Default:
# LoadModule=
<% if $zabbixagent::load_module { -%>
<% $zabbixagent::load_module.each |$lm| { -%>
LoadModule=<%= $lm %>
<% } -%>
<% } -%>
<% } -%>

<% if $zabbixagent::version != '2.4' { -%>
####### TLS-RELATED PARAMETERS #######

### Option: TLSConnect
# How the agent should connect to server or proxy. Used for active checks.
# Only one value can be specified:
# unencrypted - connect without encryption
# psk         - connect using TLS and a pre-shared key
# cert        - connect using TLS and a certificate
#
# Mandatory: yes, if TLS certificate or PSK parameters are defined (even for 'unencrypted' connection)
# Default:
# TLSConnect=unencrypted
<% if $zabbixagent::tls_connect { -%>
TLSConnect=<%= $zabbixagent::tls_connect %>
<% } -%>

### Option: TLSAccept
# What incoming connections to accept.
# Multiple values can be specified, separated by comma:
# unencrypted - accept connections without encryption
# psk         - accept connections secured with TLS and a pre-shared key
# cert        - accept connections secured with TLS and a certificate
#
# Mandatory: yes, if TLS certificate or PSK parameters are defined (even for 'unencrypted' connection)
# Default:
# TLSAccept=unencrypted
<% if $zabbixagent::tls_accept =~ String { -%>
TLSAccept=<%= $zabbixagent::tls_accept %>
<% } elsif $zabbixagent::tls_accept =~ Array { -%>
TLSAccept=<%= $zabbixagent::tls_accept.join(',') %>
<% } -%>

### Option: TLSCAFile
# Full pathname of a file containing the top-level CA(s) certificates for
# peer certificate verification.
#
# Mandatory: no
# Default:
# TLSCAFile=
<% if $zabbixagent::tls_ca_file { -%>
TLSCAFile=<%= $zabbixagent::tls_ca_file %>
<% } -%>

### Option: TLSCRLFile
# Full pathname of a file containing revoked certificates.
#
# Mandatory: no
# Default:
# TLSCRLFile=
<% if $zabbixagent::tls_crl_file { -%>
TLSCRLFile=<%= $zabbixagent::tls_crl_file %>
<% } -%>

### Option: TLSServerCertIssuer
# Allowed server certificate issuer.
#
# Mandatory: no
# Default:
# TLSServerCertIssuer=
<% if $zabbixagent::tls_server_cert_issuer { -%>
TLSServerCertIssuer=<%= $zabbixagent::tls_server_cert_issuer %>
<% } -%>

### Option: TLSServerCertSubject
# Allowed server certificate subject.
#
# Mandatory: no
# Default:
# TLSServerCertSubject=
<% if $zabbixagent::tls_server_cert_subject { -%>
TLSServerCertSubject=<%= $zabbixagent::tls_server_cert_subject %>
<% } -%>

### Option: TLSCertFile
# Full pathname of a file containing the agent certificate or certificate chain.
#
# Mandatory: no
# Default:
# TLSCertFile=
<% if $zabbixagent::tls_cert_file { -%>
TLSCertFile=<%= $zabbixagent::tls_cert_file %>
<% } -%>

### Option: TLSKeyFile
# Full pathname of a file containing the agent private key.
#
# Mandatory: no
# Default:
# TLSKeyFile=
<% if $zabbixagent::tls_key_file { -%>
TLSKeyFile=<%= $zabbixagent::tls_key_file %>
<% } -%>

### Option: TLSPSKIdentity
# Unique, case sensitive string used to identify the pre-shared key.
#
# Mandatory: no
# Default:
# TLSPSKIdentity=
<% if $zabbixagent::tls_psk_identity { -%>
TLSPSKIdentity=<%= $zabbixagent::tls_psk_identity %>
<% } -%>

### Option: TLSPSKFile
# Full pathname of a file containing the pre-shared key.
#
# Mandatory: no
# Default:
# TLSPSKFile=
<% if $zabbixagent::tls_psk_file { -%>
TLSPSKFile=<%= $zabbixagent::tls_psk_file %>
<% } -%>
<% } -%>
